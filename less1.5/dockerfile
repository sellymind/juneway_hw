FROM debian:stable-slim

RUN apt update && \
    apt install -y \
    curl \
    ca-certificates \
    wget \
    build-essential \
    gnupg \
    systemd \
    systemd-sysv \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ARG VERSION_CODENAME=$(cat /etc/os-release | grep ^VERSION_CODENAME | cut -d= -f2)
RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc && \
    chmod a+r /etc/apt/keyrings/docker.asc && \
    echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN apt update && \
    apt install -y \
    docker-ce \
    docker-ce-cli \
    containerd.io \
    docker-buildx-plugin \
    docker-compose-plugin \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


# Настраиваем Docker
RUN mkdir -p /etc/docker && \
    echo '{"storage-driver": "vfs"}' > /etc/docker/daemon.json


# Создаем systemd service
RUN echo '[Unit]\n\
Description=Docker Application Container Engine\n\
Documentation=https://docs.docker.com\n\
After=network.target\n\
\n\
[Service]\n\
Type=notify\n\
ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:2375\n\
TimeoutSec=0\n\
RestartSec=2\n\
Restart=always\n\
\n\
[Install]\n\
WantedBy=multi-user.target' > /etc/systemd/system/docker.service

# Создаем скрипт инициализации
RUN echo '#!/bin/bash\n\
\n\
# Запускаем systemd\n\
if [ ! -d "/run/systemd/system" ]; then\n\
    echo "Starting systemd..."\n\
    /lib/systemd/systemd --system --unit=basic.target &\n\
    sleep 3\n\
fi\n\
\n\
# Запускаем Docker\n\
echo "Starting Docker daemon..."\n\
systemctl start docker\n\
\n\
# Ждем запуска Docker\n\
while ! docker info >/dev/null 2>&1; do\n\
    echo "Waiting for Docker to start..."\n\
    sleep 1\n\
done\n\
\n\
echo "Docker is ready!"\n\
echo "Docker version: $(docker --version)"\n\
echo "Docker info:"\n\
docker info | grep -E "Server Version|Containers|Images"\n\
\n\
# Запускаем основной процесс\n\
exec "$@"' > /usr/local/bin/entrypoint.sh

RUN chmod +x /usr/local/bin/entrypoint.sh

WORKDIR /work

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["bash"]
